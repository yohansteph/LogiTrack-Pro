/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sliit.fasttrack_logistics.Views;

import com.sliit.fasttrack_logistics.Services.DeliveryPersonnelService;
import com.sliit.fasttrack_logistics.models.DeliveryPersonnel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DeliveryPersonnelForm extends javax.swing.JFrame {

    DeliveryPersonnelService personnelService = new DeliveryPersonnelService();

    /**
     * Creates new form DeliveryPersonnelForm
     */
    public DeliveryPersonnelForm() {
        initComponents();
        loadTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPersonnelId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        txtSchedule = new javax.swing.JTextField();
        txtRoute = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        scrollHistory = new javax.swing.JScrollPane();
        txtHistory = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonnel = new javax.swing.JTable();
        BackScreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Personnel ID\t");

        jLabel2.setText("Name");

        jLabel3.setText("Contact Number\t");

        jLabel4.setText("Schedule");

        jLabel5.setText("Assigned Route\t");

        jLabel6.setText("Delivery History\t");

        txtHistory.setColumns(20);
        txtHistory.setRows(5);
        scrollHistory.setViewportView(txtHistory);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");

        tblPersonnel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Personnel ID	", "Name", "Contact Number", "Schedule", "Assigned Route", "Delivery History"
            }
        ));
        tblPersonnel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPersonnelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPersonnel);

        BackScreen.setText("Back");
        BackScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(btnAdd)
                                .addGap(41, 41, 41)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(btnDelete))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtName)
                                        .addComponent(txtPersonnelId)
                                        .addComponent(txtContact)
                                        .addComponent(txtSchedule)
                                        .addComponent(txtRoute, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                    .addComponent(scrollHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(38, 38, 38)
                        .addComponent(btnClear)
                        .addGap(42, 42, 42)
                        .addComponent(BackScreen))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPersonnelId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(scrollHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(BackScreen))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (validateFields()) {
            DeliveryPersonnel p = new DeliveryPersonnel();
            p.setName(txtName.getText());
            p.setContactNumber(txtContact.getText());
            p.setSchedule(txtSchedule.getText());
            p.setAssignedRoute(txtRoute.getText());
            p.setDeliveryHistory(txtHistory.getText());

            boolean success = personnelService.addPersonnel(p);
            if (success) {
                JOptionPane.showMessageDialog(this, "Personnel added successfully.");
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add personnel.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtPersonnelId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select a personnel record to update.");
            return;
        }
        if (validateFields()) {
            DeliveryPersonnel p = new DeliveryPersonnel();
            p.setId(Integer.parseInt(txtPersonnelId.getText()));
            p.setName(txtName.getText());
            p.setContactNumber(txtContact.getText());
            p.setSchedule(txtSchedule.getText());
            p.setAssignedRoute(txtRoute.getText());
            p.setDeliveryHistory(txtHistory.getText());

            boolean success = personnelService.updatePersonnel(p);
            if (success) {
                JOptionPane.showMessageDialog(this, "Personnel updated successfully.");
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to update personnel.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (txtPersonnelId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select a personnel record to delete.");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure to delete this personnel?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(txtPersonnelId.getText());
            boolean success = personnelService.deletePersonnel(id);
            if (success) {
                JOptionPane.showMessageDialog(this, "Personnel deleted successfully.");
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete personnel.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblPersonnelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPersonnelMouseClicked
        int selectedRow = tblPersonnel.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblPersonnel.getModel();
            txtPersonnelId.setText(model.getValueAt(selectedRow, 0).toString());
            txtName.setText(model.getValueAt(selectedRow, 1).toString());
            txtContact.setText(model.getValueAt(selectedRow, 2).toString());
            txtSchedule.setText(model.getValueAt(selectedRow, 3).toString());
            txtRoute.setText(model.getValueAt(selectedRow, 4).toString());
            txtHistory.setText(model.getValueAt(selectedRow, 5).toString());
        } // TODO add your handling code here:
    }//GEN-LAST:event_tblPersonnelMouseClicked

    private void BackScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackScreenActionPerformed
        
            new MainForm().setVisible(false);
            this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_BackScreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryPersonnelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryPersonnelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryPersonnelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryPersonnelForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryPersonnelForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackScreen;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane scrollHistory;
    private javax.swing.JTable tblPersonnel;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextArea txtHistory;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPersonnelId;
    private javax.swing.JTextField txtRoute;
    private javax.swing.JTextField txtSchedule;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        List<DeliveryPersonnel> personnelList = personnelService.getAllPersonnel();
        DefaultTableModel model = (DefaultTableModel) tblPersonnel.getModel();
        model.setRowCount(0);

        for (DeliveryPersonnel p : personnelList) {
            model.addRow(new Object[]{
                p.getId(),
                p.getName(),
                p.getContactNumber(),
                p.getSchedule(),
                p.getAssignedRoute(),
                p.getDeliveryHistory()
            });
        }
    }

    private void clearFields() {
        txtPersonnelId.setText("");
        txtName.setText("");
        txtContact.setText("");
        txtSchedule.setText("");
        txtRoute.setText("");
        txtHistory.setText("");
        tblPersonnel.clearSelection();
    }

    private boolean validateFields() {
        if (txtName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Name.");
            return false;
        }
        if (txtContact.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Contact Number.");
            return false;
        }
        if (txtSchedule.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Schedule.");
            return false;
        }
        if (txtRoute.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Assigned Route.");
            return false;
        }
        // History can be optional
        return true;
    }

}
