/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sliit.fasttrack_logistics.Views;

import com.sliit.fasttrack_logistics.Services.DeliveryScheduleService;
import com.sliit.fasttrack_logistics.models.DeliverySchedule;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DeliveryScheduleForm extends javax.swing.JFrame {

    DeliveryScheduleService scheduleService = new DeliveryScheduleService();

    /**
     * Creates new form DeliveryScheduleForm
     */
    public DeliveryScheduleForm() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtScheduleId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtShipmentId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDeliveryDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTimeSlot = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        BackScreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Schedule ID");

        jLabel2.setText("Shipment ID");

        jLabel3.setText("Delivery Date");

        jLabel4.setText("Delivery Time Slot");

        jLabel5.setText("Status");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");

        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Schedule ID", "Shipment ID", "Delivery Date", "Time Slot", "Status"
            }
        ));
        tblSchedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblScheduleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSchedule);

        BackScreen.setText("Back");
        BackScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18)
                        .addComponent(BackScreen))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(100, 100, 100)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTimeSlot)
                                    .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(txtShipmentId)
                                    .addComponent(txtScheduleId)
                                    .addComponent(txtDeliveryDate))))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtScheduleId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtShipmentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDeliveryDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTimeSlot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(BackScreen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtScheduleId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Select a record to update.");
            return;
        }

        if (validateFields()) {
            DeliverySchedule schedule = new DeliverySchedule();
            schedule.setId(Integer.parseInt(txtScheduleId.getText()));
            schedule.setShipmentId(txtShipmentId.getText());
            schedule.setDeliveryDate(java.sql.Date.valueOf(txtDeliveryDate.getText()));
            schedule.setDeliveryTimeSlot(txtTimeSlot.getText());
            schedule.setStatus(txtStatus.getText());

            boolean success = scheduleService.updateDeliveryStatus(schedule.getId(), schedule.getStatus());
            if (success) {
                JOptionPane.showMessageDialog(this, "Schedule updated.");
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Update failed.");
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (validateFields()) {
            DeliverySchedule schedule = new DeliverySchedule();
            schedule.setShipmentId(txtShipmentId.getText());
            schedule.setDeliveryDate(java.sql.Date.valueOf(txtDeliveryDate.getText()));
            schedule.setDeliveryTimeSlot(txtTimeSlot.getText());
            schedule.setStatus(txtStatus.getText());

            boolean success = scheduleService.bookDeliverySlot(schedule);
            if (success) {
                JOptionPane.showMessageDialog(this, "Schedule added successfully.");
                loadTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to add schedule.");
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int scheduleId = Integer.parseInt(txtScheduleId.getText().trim());

            boolean deleted = scheduleService.deleteScheduleById(scheduleId);

            if (deleted) {
                JOptionPane.showMessageDialog(this, "Schedule deleted successfully.");
                loadTable();  // refresh table after deletion
                clearFields();  // clear input fields after deletion
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete schedule.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Schedule ID.");
        }     // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblScheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblScheduleMouseClicked
        int selectedRow = tblSchedule.getSelectedRow();
        if (selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
            txtScheduleId.setText(model.getValueAt(selectedRow, 0).toString());
            txtShipmentId.setText(model.getValueAt(selectedRow, 1).toString());
            txtDeliveryDate.setText(model.getValueAt(selectedRow, 2).toString());
            txtTimeSlot.setText(model.getValueAt(selectedRow, 3).toString());
            txtStatus.setText(model.getValueAt(selectedRow, 4).toString());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tblScheduleMouseClicked

    private void BackScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackScreenActionPerformed
        new MainForm().setVisible(false);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_BackScreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryScheduleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryScheduleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryScheduleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryScheduleForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryScheduleForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackScreen;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSchedule;
    private javax.swing.JTextField txtDeliveryDate;
    private javax.swing.JTextField txtScheduleId;
    private javax.swing.JTextField txtShipmentId;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTimeSlot;
    // End of variables declaration//GEN-END:variables

    private void loadTable() {
        List<DeliverySchedule> scheduleList = scheduleService.getAllSchedules(); // implement this in service
        DefaultTableModel model = (DefaultTableModel) tblSchedule.getModel();
        model.setRowCount(0);
        for (DeliverySchedule s : scheduleList) {
            model.addRow(new Object[]{
                s.getId(),
                s.getShipmentId(),
                s.getDeliveryDate(),
                s.getDeliveryTimeSlot(),
                s.getStatus()
            });
        }

    }

    private void clearFields() {
        txtScheduleId.setText("");
        txtShipmentId.setText("");
        txtDeliveryDate.setText("");
        txtTimeSlot.setText("");
        txtStatus.setText("");
        tblSchedule.clearSelection();
    }

    private boolean validateFields() {
        if (txtShipmentId.getText().trim().isEmpty() || txtDeliveryDate.getText().trim().isEmpty()
                || txtTimeSlot.getText().trim().isEmpty() || txtStatus.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill all fields.");
            return false;
        }
        return true;
    }
}
